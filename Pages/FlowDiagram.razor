@page "/"

@using Blazor.Diagrams.Components
@using Workflow.Components

@inject IJSRuntime JSRuntime

<div class="container">
    <div class="item_menu">
        <button class="btn btn-primary" @onclick="Clear">Clear</button>
        <button class="btn btn-primary" @onclick="Template">Template</button>
        <button class="btn btn-primary" @onclick="() => Diagram.ZoomToFit(10)" style="width: 240px;">Zoom to fit</button>
        <button class="btn btn-primary" @onclick="ReconnectLinks" style="width: 260px;">Reconnect Links</button>
        @* <span>Zoom Level : @ZoomLevel</span> *@


        <div class="badges">
            @if (IsDiagramValid)
            {
                <Tooltip Title=@ValidationReason Placement="TooltipPlacement.Left" CustomClass="custom-tooltip-valid" Html="true">
                    <span class="badge text-bg-success rounded-pill">Valid Diagram</span>
                </Tooltip>
            }
            else
            {
                <Tooltip Title=@ValidationReason Placement="TooltipPlacement.Left" CustomClass="custom-tooltip-invalid" Html="true">
                    <span class="badge text-bg-danger rounded-pill">Invalid Diagram</span>
                </Tooltip>
            }
        </div>

    </div>
    <div>
    </div>
    <div class="item_elements">
        <div draggable="true" @ondblclick="() => OnElementDblClick(Enumerators.ShapeType.Start)" @ondragstart="() => OnDragStart(Enumerators.ShapeType.Start)">
            <img class="element_image" src="images/start.svg" />
        </div>
        <div draggable="true" @ondblclick="() => OnElementDblClick(Enumerators.ShapeType.Rectangle)" @ondragstart="() => OnDragStart(Enumerators.ShapeType.Rectangle)">
            <img class="element_image" src="images/rectangle.svg" />
        </div>
        <div draggable="true" @ondblclick="() => OnElementDblClick(Enumerators.ShapeType.Triangle)" @ondragstart="() => OnDragStart(Enumerators.ShapeType.Triangle)">
            <img class="element_image" src="images/triangle.svg" />
        </div>
        <div draggable="true" @ondblclick="() => OnElementDblClick(Enumerators.ShapeType.Diamond)" @ondragstart="() => OnDragStart(Enumerators.ShapeType.Diamond)">
            <img class="element_image" src="images/diamond.svg" />
        </div>
        <div draggable="true" @ondblclick="() => OnElementDblClick(Enumerators.ShapeType.End)" @ondragstart="() => OnDragStart(Enumerators.ShapeType.End)">
            <img class="element_image" src="images/end.svg" />
        </div>
    </div>
    <div class="item_diagram" ondragover="event.preventDefault();" @ondragover:preventDefault @ondrop="OnDrop">
        <CascadingValue Value="Diagram" IsFixed="true">
            <DiagramCanvas>
                <Widgets>
                    <SelectionBoxWidget />
                </Widgets>
            </DiagramCanvas>
        </CascadingValue>
    </div>
    <div class="item_properties">
        <label class="property_title">ID:</label>
        <input class="property_value" type="text" readonly value="@(nodeItem == null ? " " : nodeItem.ID)" />
        <br />
        <label class="property_title">Name:</label>
        <input class="property_value" type="text" @bind-value="nodeItem.Name" />
        <br />
        <label class="property_title">Description:</label>
        <input class="property_value" type="text" @bind-value="nodeItem.Description" />
        <br />
        <label class="property_title">Label:</label>
        <input class="property_value" type="text" @bind-value="nodeItem.Label" />

        @* <br />
        <label class="property_title">X Position:</label>
        <input class="property_value" type="number" @bind-value=PosX/>
        <label class="property_title">Y Position:</label>
        <input class="property_value" type="number" @bind-value=PosY />
        <br />
        <label class="property_title">Width:</label>
        <input class="property_value" type="number" @bind-value=Width/>
        <label class="property_title">Height:</label>
        <input class="property_value" type="number" @bind-value=Height /> *@

        <br />
        <button class="btn btn-primary" @onclick="ApplyPropertyChanges">Apply</button>
    </div>
    <div class="item_output">
    </div>
</div>

<style>
    .container {
        display: grid;
        height: 100%;
        max-width: 100vw;
        width: 100% !important;
        grid-template-columns: 10% 70% 20%;
        grid-template-rows: 40px 75% 25%;
    }

    .item_menu {
        display: flex;
        flex-direction: row;
        column-gap: 20px;
        grid-column: 1 / span 3;
        grid-row: 1;
        border-style: solid;
        border-width: 1px;
        padding: 2px;
    }

    .item_elements {
        display: flex;
        flex-direction: column;
        align-items: center;
        row-gap: 20px;
        grid-column: 1;
        grid-row: 2;
        border-style: solid;
        border-width: 1px;
        padding: 2px;
    }

    .item_diagram {
        grid-column: 2;
        grid-row: 2;
        border-style: solid;
        border-width: 1px;
    }

    .item_properties {
        grid-column: 3;
        grid-row: 2;
        border-style: solid;
        border-width: 1px;
        padding: 2px;
        display: flex;
        flex-direction: column;
    }

    .item_output {
        grid-column: 1 / span 3;
        grid-row: 3;
        border-style: solid;
        border-width: 1px;
        padding: 2px;
    }

    .element_image {
        width: 100px;
        height: 60px;
    }

    .badges {
        align-self: center;
        width: 100%;
        text-align: end;
    }

    .error_text {
        width: 100%;
        background-color: lightpink;
        height: 100%;
    }

    .custom-tooltip-valid {
        --bs-tooltip-bg: lightgreen;
        --bs-tooltip-color: darkgreen;
    }

    .custom-tooltip-invalid {
        --bs-tooltip-bg: pink;
        --bs-tooltip-color: red;
    }

    .tooltip-inner {
        text-align: left;
        max-width: 300px;
        width: 300px;
    }

    svg text {
        text-anchor: middle;
        dominant-baseline: middle;
    }

    .property_title{
        font-size: 1rem;
        font-weight: 600;
    }

    .property_value {
        font-size: 0.8rem;
        font-weight: 400;
    }
</style>